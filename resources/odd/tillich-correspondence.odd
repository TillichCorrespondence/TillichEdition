<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>Tillich Korrespondenz</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref></p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl/></encodingDesc><revisionDesc>
            <change when="2022-05-03+02:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="tillich-correspondence" source="teipublisher.odd"> <elementSpec ident="add" mode="change"><model behaviour="inline"/></elementSpec><elementSpec ident="dateline" mode="change"><model behaviour="block">
            <outputRendition xml:space="preserve">
            text-align: right;
            </outputRendition>
        </model></elementSpec><elementSpec ident="date" mode="change"><model output="print" predicate="text()" behaviour="inline"/><model output="print" predicate="@when and not(text())" behaviour="inline">
            <param name="content" value="@when"/>
        </model><model output="web" predicate="@when" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="format-date(@when, '[FNn], [D1o] [MNn] [Y]')"/>
        </model><model predicate="text()" behaviour="inline"/></elementSpec><elementSpec ident="pb" mode="change"><model behaviour="break" useSourceRendition="true">
            <param name="type" value="'page'"/>
            <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
            <outputRendition xml:space="preserve">
            display: 4pt; color: grey;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: ' |';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '';
            </outputRendition>
        </model></elementSpec><elementSpec ident="persName" mode="add"><model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(@ref, doc(&#34;/db/apps/tillichcorrespondence/data/people.xml&#34;))"/>
            <outputRendition xml:space="preserve">
            color: grey;
            </outputRendition>
        </model><model behaviour="inline"/></elementSpec><elementSpec ident="unclear" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="after">
            content: ' [?] ';
            </outputRendition>
        </model><model behaviour="omit"/></elementSpec><elementSpec ident="placeName" mode="add"><model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="@ref"/>
            <outputRendition xml:space="preserve">
            color: grey
            </outputRendition>
        </model></elementSpec><elementSpec ident="teiHeader" mode="change"><model output="latex" behaviour="metadata"/><model output="fo" behaviour="omit"/><model output="web" predicate="$parameters?header='short'" behaviour="block"/><model output="web" behaviour="block">
            <param name="content" value=".//sourceDesc/physDesc/p"/>
        </model></elementSpec><elementSpec ident="div" mode="change"><modelSequence>
            <model behaviour="inline">
                <param name="content" value="root(.)//correspDesc/correspAction[@type='sent']/persName"/>
                <outputRendition xml:space="preserve" scope="after">
                content:' an ';
                </outputRendition>
                <outputRendition xml:space="preserve">
                font-weight: bold;
                </outputRendition>
            </model>
            <model behaviour="inline">
                <param name="content" value="root(.)//correspDesc/correspAction[@type='received']/persName"/>
                <outputRendition xml:space="preserve">
                font-weight: bold;
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                
                
                
                
                
                
                
                
                
                
                
                
                
                content: "\a";
white-space: pre;
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model behaviour="inline">
                <param name="content" value="root(.)//correspDesc/correspAction[@type='sent']/date"/>
                <outputRendition xml:space="preserve">
                
                </outputRendition>
            </model>
            <model behaviour="inline">
                <param name="content" value="root(.)//correspDesc/correspAction[@type='sent']/placeName"/>
                <outputRendition xml:space="preserve" scope="before">
                content: '; ';
                </outputRendition>
                <outputRendition xml:space="preserve" scope="after">
                
                
                
                
                
                
                
                
                
                
                
                
                
                content: "\a";
white-space: pre;
                
                
                
                
                
                
                
                
                
                
                
                
                
                </outputRendition>
            </model>
            <model behaviour="inline">
                <param name="content" value="root(.)//msDesc/msIdentifier/repository"/>
                <outputRendition xml:space="preserve" scope="after">
                content: '; ';
                </outputRendition>
            </model>
            <model behaviour="inline">
                <param name="content" value="root(.)//msDesc/msIdentifier/idno"/>
            </model>
            <model behaviour="section"/>
        </modelSequence><model predicate="@type='title_page'" behaviour="block">
            <outputRendition xml:space="preserve">
            border: 1px solid black; padding: 5px;
            </outputRendition>
        </model><model predicate="parent::body or parent::front or parent::back" behaviour="section"/><model behaviour="block"/></elementSpec><elementSpec ident="hi" mode="change"><model predicate="@rend='b'" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="@rend='u'" behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
        </model><model predicate="@rend='uu'" behaviour="inline">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            text-decoration-line: underline;
  text-decoration-style: double;
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model><model predicate="@rend='smaller'" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-size: smaller;
            </outputRendition>
        </model></elementSpec><elementSpec ident="title" mode="change"><model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="5"/>
        </model><modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' â€” '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence><model predicate="not(@level) and parent::bibl" behaviour="inline"/><modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence><model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec><elementSpec ident="person" mode="add"><modelSequence>
            <model behaviour="block">
                <param name="content" value="(/persName[@type='reg'], if (birth and death) then (&#34; | &#34;, birth/date, &#34;â€“&#34;, death/date) else (if (birth) then (&#34; | geb. &#34;, birth/date) else (if (death) then (&#34; | gest. &#34;, death/date) else ('null'))))"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note"/>
            </model>
            <model behaviour="block">
                <param name="content" value="idno[@type='DB']"/>
            </model>
        </modelSequence></elementSpec><elementSpec ident="note" mode="change"><model predicate="parent::person" behaviour="inline"/><model behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model></elementSpec><elementSpec ident="idno" mode="add"><model predicate="parent::person" behaviour="link">
            <param name="uri" value="."/>
        </model></elementSpec><elementSpec ident="TEI" mode="change"><model behaviour="document">
            <param name="content" value="text"/>
        </model></elementSpec><elementSpec ident="head" mode="change"><model predicate="@type=&#34;context&#34;" behaviour="heading">
            <param name="level" value="3"/>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading">
            <param name="level" value="count(ancestor::div)"/>
        </model><model behaviour="block"/></elementSpec></schemaSpec>
        </body>
    </text></TEI>